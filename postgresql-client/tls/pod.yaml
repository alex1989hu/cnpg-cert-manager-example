apiVersion: v1
kind: Pod
metadata:
  labels:
    app.kubernetes.io/name: psql-client
  name: psql-client
  namespace: dts-test
spec:
  automountServiceAccountToken: false
  containers:
  - args: [ "trap : TERM INT; sleep infinity & wait" ]
    command: [ "/bin/sh", "-c", "--" ]
    env:
    - name: PGDATABASE
      valueFrom:
        secretKeyRef:
          key: dbname
          name: dts-postgres-app
    - name: PGHOST
      valueFrom:
        secretKeyRef:
          key: host
          name: dts-postgres-app
    - name: PGPASSWORD
      valueFrom:
        secretKeyRef:
          key: password
          name: dts-postgres-app
    - name: PGPORT
      valueFrom:
        secretKeyRef:
          key: port
          name: dts-postgres-app
    - name: PGSSLMODE
      value: verify-full
    - name: PGSSLROOTCERT
      value: /certificate/ca.crt
    - name: PGUSER
      valueFrom:
        secretKeyRef:
          key: user
          name: dts-postgres-app
    image: ghcr.io/cloudnative-pg/postgresql:17.4-bookworm
    name: client
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
      privileged: false
      readOnlyRootFilesystem: true
      runAsNonRoot: true
    volumeMounts:
    - name: certificate
      mountPath: /certificate
  enableServiceLinks: false
  resources:
    limits:
      cpu: 50m
      memory: 64Mi
    requests:
      cpu: 50m
      memory: 64Mi
  securityContext:
    fsGroup: 26
    runAsGroup: 26
    runAsNonRoot: true
    runAsUser: 26
    seccompProfile:
      type: RuntimeDefault
  volumes:
  - name: certificate
    secret:
      defaultMode: 256
      items:
      - key: ca.crt
        path: ca.crt
      secretName: dts-postgres-server

---
apiVersion: v1
kind: Pod
metadata:
  labels:
    app.kubernetes.io/name: psql-pgbouncer-client
  name: psql-pgbouncer-client
  namespace: dts-test
spec:
  automountServiceAccountToken: false
  containers:
  - args: [ "trap : TERM INT; sleep infinity & wait" ]
    command: [ "/bin/sh", "-c", "--" ]
    env:
    - name: PGDATABASE
      valueFrom:
        secretKeyRef:
          key: dbname
          name: dts-postgres-app
    # Note: The CloudNativePG operator currently does not populate the connection pooler address in the generated Kubernetes secret.
    - name: PGHOST
      value: dts-postgres-pooler-rw
    - name: PGPASSWORD
      valueFrom:
        secretKeyRef:
          key: password
          name: dts-postgres-app
    - name: PGPORT
      valueFrom:
        secretKeyRef:
          key: port
          name: dts-postgres-app
    - name: PGSSLMODE
      value: verify-full
    - name: PGSSLROOTCERT
      value: /certificate/ca.crt
    - name: PGUSER
      valueFrom:
        secretKeyRef:
          key: user
          name: dts-postgres-app
    image: ghcr.io/cloudnative-pg/postgresql:17.4-bookworm
    name: client
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
      privileged: false
      readOnlyRootFilesystem: true
      runAsNonRoot: true
    volumeMounts:
    - name: certificate
      mountPath: /certificate
  enableServiceLinks: false
  resources:
    limits:
      cpu: 50m
      memory: 64Mi
    requests:
      cpu: 50m
      memory: 64Mi
  securityContext:
    fsGroup: 26
    runAsGroup: 26
    runAsNonRoot: true
    runAsUser: 26
    seccompProfile:
      type: RuntimeDefault
  volumes:
  - name: certificate
    secret:
      defaultMode: 256
      items:
      - key: ca.crt
        path: ca.crt
      secretName: dts-postgres-server
